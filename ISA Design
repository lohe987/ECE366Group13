ISA NAME=> Name

Registers used=> 4

Memory=> 16 bit data with is taged to an integer

Instructions=>
init imm
	MC: P|1 0|I I I I I
	*Note: Always initializes register zero ($r0 = imm)
bez imm
	MC: P|1 1|I I I I I
	*Note: Always compares register zero to 0 ($r0 =? 0)
add Rx Ry
	MC: P|0 0 0 0|Rx|Ry Ry
	*Note: Rx can only be $r0 and $r1; Sum is stored in Ry
slt Rx Ry
	MC: P|0 0 0 1|Rx|Ry Ry
	*Note: Rx can only be $r0 and $r1; Ry = $r0, $r1, $r2, $r3; puts value at Rx (Rx = Rx <? Ry)
lw Address
	MC: P|0 0 1 1|A A A
	*Note: Always referring to $r0; Address is an immediate number on where to load the value from
sw Address
	MC: P|0 0 1 0|A A A
	*Note: Always referring to $r0; Address is an immediate number on where to store the value to
XOR Rx Ry
	MC: P|0 1 0 0|Rx|Ry Ry
	*Note: Rx can only be $r0 and $r1; Ry = $r0, $r1, $r2, $r3; puts value at Rx (Rx = Rx XOR Ry)
AND Rx Ry
	MC: P|0 1 0 1|Rx|Ry Ry
	*Note: Rx can only be $r0 and $r1; Ry = $r0, $r1, $r2, $r3; puts value at Rx (Rx = Rx AND Ry)
srl Rx
	MC: P|0 1 1 1|Rx Rx|Ry
	*Note: Barrel shifts right Rx; 
Halt
	MC: P|0 1 1 0|X X X X
	*Note: X does not matter; Ends Program.
